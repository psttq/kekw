"use strict";
(self["webpackChunkkekw"] = self["webpackChunkkekw"] || []).push([["index"],{

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Game: () => (/* binding */ Game)
/* harmony export */ });
/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.mjs");
/* harmony import */ var _GameObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameObject */ "./src/GameObject.ts");
/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Player */ "./src/Player.ts");



const SERVER_URL = "wss://217.28.221.89:8123";
class Game {
    constructor() {
        this.pixi_app = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Application();
        this.gameObjects = [];
        this.addedGameObjects = [];
        this.player_id = -1;
    }
    sendMessage(str) {
        this.websocket.send(str);
    }
    addGameObject(gameObject) {
        this.pixi_app.stage.addChild(gameObject.sprite);
    }
    removeGameObject(gameObject) {
        this.pixi_app.stage.removeChild(gameObject.sprite);
    }
    async _init() {
        await this.pixi_app.init();
        document.body.appendChild(this.pixi_app.canvas);
    }
    async _load_assets() {
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-00.png");
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-01.png");
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-02.png");
    }
    async _game_loop(deltaTime) {
        //WRITE HERE GAME LOOP CODE
        if (this.addedGameObjects.length !== 0) {
            for (let el of this.addedGameObjects) {
                this.addGameObject(el);
            }
            this.addedGameObjects = [];
        }
        this.addGameObject(this.player);
    }
    async _init_websocket() {
        this.websocket = new WebSocket(SERVER_URL);
        let pingInterval;
        this.websocket.onopen = (e) => {
            console.log("CONNECTED");
        };
        this.websocket.onclose = (e) => {
            console.log("DISCONNECTED");
            clearInterval(pingInterval);
        };
        this.websocket.onmessage = (e) => {
            console.log(`RECEIVED: ${e.data}`);
            let data = JSON.parse(e.data);
            let d_gameObjects = data.gameObjects;
            for (let el of d_gameObjects) {
                let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_0__.Sprite.from("./assets/circles/sphere-02.png");
                let ball = new _GameObject__WEBPACK_IMPORTED_MODULE_1__.GameObject(el.id, { x: el.position.x, y: el.position.y }, { width: 50, height: 50 }, ball_sprite, this);
                let go = this.gameObjects.find((x) => x.id == el.id);
                if (!go) {
                    this.gameObjects.push(ball);
                    this.addedGameObjects.push(ball);
                }
                else {
                    console.log(go);
                    go.setPosition({ x: el.position.x, y: el.position.y });
                }
            }
            if (this.player_id === -1) {
                this.player_id = d_gameObjects.at(-1).id;
            }
        };
        this.websocket.onerror = (e) => {
            console.log(`ERROR: ${e}`);
        };
    }
    async run() {
        await this._init();
        await this._load_assets();
        await this._init_websocket();
        let player_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_0__.Sprite.from("./assets/circles/sphere-01.png");
        this.player = new _Player__WEBPACK_IMPORTED_MODULE_2__.Player({ x: 50, y: 100 }, { width: 50, height: 50 }, player_sprite, this);
        this.pixi_app.ticker.add((ticker) => {
            this._game_loop(ticker.deltaTime);
        });
    }
}


/***/ }),

/***/ "./src/GameObject.ts":
/*!***************************!*\
  !*** ./src/GameObject.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GameObject: () => (/* binding */ GameObject)
/* harmony export */ });
class GameObject {
    constructor(id, position, size, sprite, game) {
        this.game = game;
        this.id = id;
        this.sprite = sprite;
        this.sprite.eventMode = "dynamic";
        this.sprite.position.x = position.x;
        this.sprite.position.y = position.y;
        this.sprite.anchor = 0.5;
        this.sprite.width = size.width;
        this.sprite.height = size.height;
        this.setPosition(position);
        this.sprite.texture.source.magFilter = "nearest";
        this.sprite.texture.source.minFilter = "nearest";
        this.updateRotation = true;
    }
    setPosition(position) {
        this.sprite.position.x = position.x;
        this.sprite.position.y = position.y;
    }
    update(deltaTime) { }
}


/***/ }),

/***/ "./src/Player.ts":
/*!***********************!*\
  !*** ./src/Player.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Player: () => (/* binding */ Player)
/* harmony export */ });
/* harmony import */ var _GameObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameObject */ "./src/GameObject.ts");
/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.mjs");


class Player extends _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject {
    constructor(position, size, sprite, game) {
        super(-1, position, size, sprite, game);
        this.updateRotation = false;
        this.velocity = 20;
        this.ballRadius = 50;
        this.vx = 0;
        this.vy = 0;
        this._mouse_x = 0;
        this._mouse_y = 0;
        this.balls = [];
        this.timer = 0;
        this.ball_cd = 5;
        this.timer_started = false;
        this.game = game;
        let ball_position = { x: 0, y: 0 };
        ball_position.x = position.x;
        ball_position.y = position.y - 70;
        let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_1__.Sprite.from("./assets/circles/sphere-02.png");
        this.ball = new _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject(0, ball_position, { width: 50, height: 50 }, ball_sprite, game);
        document.addEventListener("keydown", (e) => this.handleKeyDown(e.key));
        document.addEventListener("keyup", (e) => this.handleKeyUp(e.key));
        this.sprite.on("globalmousemove", (e) => {
            this.handleMouseMove(e.x, e.y);
        });
        document.addEventListener("mousedown", (e) => {
            this.handleClick();
        });
    }
    handleMouseMove(mouse_x, mouse_y) {
        this._mouse_x = mouse_x;
        this._mouse_y = mouse_y;
        // this.sprite.position.x = mouse_x;
        // this.sprite.position.y = mouse_y;
        let message = {
            id: this.game.player_id,
            mouse_x: this._mouse_x,
            mouse_y: this._mouse_y
        };
        this.game.sendMessage(JSON.stringify(message));
    }
    onTimerEnd() {
        let ball_position = { x: 0, y: 0 };
        ball_position.x = this.sprite.x;
        ball_position.y = this.sprite.y - 70;
        let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_1__.Sprite.from("./assets/circles/sphere-02.png");
        this.ball = new _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject(0, ball_position, { width: 50, height: 50 }, ball_sprite, this.game);
        this.game.addGameObject(this.ball);
    }
    update(deltaTime) {
        if (this.ball) {
            let vec_x = this._mouse_x - this.sprite.x;
            let vec_y = this._mouse_y - this.sprite.y;
            let length = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
            vec_x /= length;
            vec_y /= length;
            let ball_position_x = this.sprite.x + vec_x * (this.ballRadius + 10);
            let ball_position_y = this.sprite.y + vec_y * (this.ballRadius + 10);
            if (Number.isNaN(ball_position_x) || Number.isNaN(ball_position_y))
                return;
            this.ball.setPosition({ x: ball_position_x, y: ball_position_y });
            this.ball.update(deltaTime);
        }
        for (let ball of this.balls)
            ball.update(deltaTime);
        if (this.timer_started) {
            this.timer -= deltaTime;
            if (this.timer < 0) {
                this.onTimerEnd();
                this.timer_started = false;
            }
        }
        super.update(deltaTime);
    }
    handleClick() {
        if (!this.ball)
            return;
        let vec_x = this._mouse_x - this.sprite.x;
        let vec_y = this._mouse_y - this.sprite.y;
        let length = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
        vec_x /= length;
        vec_y /= length;
        let force = 60;
        vec_x *= force;
        vec_y *= force;
        // Matter.Body.applyForce(this.ball.body, this.ball.body.position, {
        //   x: vec_x,
        //   y: vec_y
        // });
        this.balls.push(this.ball);
        this.ball = undefined;
        this.timer = this.ball_cd;
        this.timer_started = true;
    }
    handleKeyDown(key) { }
    handleKeyUp(key) { }
}


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ "./src/Game.ts");

document.body.style.backgroundColor = "#181818";
function removeItem(arr, value) {
    const index = arr.indexOf(value);
    if (index > -1) {
        arr.splice(index, 1);
    }
    return arr;
}
const main = async () => {
    let game = new _Game__WEBPACK_IMPORTED_MODULE_0__.Game();
    game.run();
};
main();


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["npm.pixi.js","npm.xmldom","npm.pixi","npm.ismobilejs","npm.parse-svg-path","npm.earcut"], () => (__webpack_exec__("./src/index.ts")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,