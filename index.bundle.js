"use strict";
(self["webpackChunkkekw"] = self["webpackChunkkekw"] || []).push([["index"],{

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Game: () => (/* binding */ Game)
/* harmony export */ });
/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.mjs");
/* harmony import */ var _GameObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameObject */ "./src/GameObject.ts");
/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Player */ "./src/Player.ts");



const SERVER_URL = "ws://217.28.221.89:8000";
class Game {
    constructor() {
        this.pixi_app = new pixi_js__WEBPACK_IMPORTED_MODULE_0__.Application();
        this.gameObjects = [];
        this.addedGameObjects = [];
        this.player_id = -1;
    }
    sendMessage(str) {
        this.websocket.send(str);
    }
    addGameObject(gameObject) {
        this.pixi_app.stage.addChild(gameObject.sprite);
    }
    removeGameObject(gameObject) {
        this.pixi_app.stage.removeChild(gameObject.sprite);
    }
    async _init() {
        await this.pixi_app.init();
        document.body.appendChild(this.pixi_app.canvas);
    }
    async _load_assets() {
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-00.png");
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-01.png");
        await pixi_js__WEBPACK_IMPORTED_MODULE_0__.Assets.load("./assets/circles/sphere-02.png");
    }
    async _game_loop(deltaTime) {
        //WRITE HERE GAME LOOP CODE
        if (this.addedGameObjects.length !== 0) {
            for (let el of this.addedGameObjects) {
                this.addGameObject(el);
            }
            this.addedGameObjects = [];
        }
        this.addGameObject(this.player);
    }
    async _init_websocket() {
        this.websocket = new WebSocket(SERVER_URL);
        let pingInterval;
        this.websocket.onopen = (e) => {
            console.log("CONNECTED");
        };
        this.websocket.onclose = (e) => {
            console.log("DISCONNECTED");
            clearInterval(pingInterval);
        };
        this.websocket.onmessage = (e) => {
            console.log(`RECEIVED: ${e.data}`);
            let data = JSON.parse(e.data);
            let d_gameObjects = data.gameObjects;
            for (let el of d_gameObjects) {
                let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_0__.Sprite.from("./assets/circles/sphere-02.png");
                let ball = new _GameObject__WEBPACK_IMPORTED_MODULE_1__.GameObject(el.id, { x: el.position.x, y: el.position.y }, { width: 50, height: 50 }, ball_sprite, this);
                let go = this.gameObjects.find((x) => x.id == el.id);
                if (!go) {
                    this.gameObjects.push(ball);
                    this.addedGameObjects.push(ball);
                }
                else {
                    console.log(go);
                    go.setPosition({ x: el.position.x, y: el.position.y });
                }
            }
            if (this.player_id === -1) {
                this.player_id = d_gameObjects.at(-1).id;
            }
        };
        this.websocket.onerror = (e) => {
            console.log(`ERROR: ${e}`);
        };
    }
    async run() {
        await this._init();
        await this._load_assets();
        await this._init_websocket();
        let player_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_0__.Sprite.from("./assets/circles/sphere-01.png");
        this.player = new _Player__WEBPACK_IMPORTED_MODULE_2__.Player({ x: 50, y: 100 }, { width: 50, height: 50 }, player_sprite, this);
        this.pixi_app.ticker.add((ticker) => {
            this._game_loop(ticker.deltaTime);
        });
    }
}


/***/ }),

/***/ "./src/GameObject.ts":
/*!***************************!*\
  !*** ./src/GameObject.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GameObject: () => (/* binding */ GameObject)
/* harmony export */ });
class GameObject {
    constructor(id, position, size, sprite, game) {
        this.game = game;
        this.id = id;
        this.sprite = sprite;
        this.sprite.eventMode = "dynamic";
        this.sprite.position.x = position.x;
        this.sprite.position.y = position.y;
        this.sprite.anchor = 0.5;
        this.sprite.width = size.width;
        this.sprite.height = size.height;
        this.setPosition(position);
        this.sprite.texture.source.magFilter = "nearest";
        this.sprite.texture.source.minFilter = "nearest";
        this.updateRotation = true;
    }
    setPosition(position) {
        this.sprite.position.x = position.x;
        this.sprite.position.y = position.y;
    }
    update(deltaTime) { }
}


/***/ }),

/***/ "./src/Player.ts":
/*!***********************!*\
  !*** ./src/Player.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Player: () => (/* binding */ Player)
/* harmony export */ });
/* harmony import */ var _GameObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameObject */ "./src/GameObject.ts");
/* harmony import */ var pixi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/index.mjs");


class Player extends _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject {
    constructor(position, size, sprite, game) {
        super(-1, position, size, sprite, game);
        this.updateRotation = false;
        this.velocity = 20;
        this.ballRadius = 50;
        this.vx = 0;
        this.vy = 0;
        this._mouse_x = 0;
        this._mouse_y = 0;
        this.balls = [];
        this.timer = 0;
        this.ball_cd = 5;
        this.timer_started = false;
        this.game = game;
        let ball_position = { x: 0, y: 0 };
        ball_position.x = position.x;
        ball_position.y = position.y - 70;
        let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_1__.Sprite.from("./assets/circles/sphere-02.png");
        this.ball = new _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject(0, ball_position, { width: 50, height: 50 }, ball_sprite, game);
        document.addEventListener("keydown", (e) => this.handleKeyDown(e.key));
        document.addEventListener("keyup", (e) => this.handleKeyUp(e.key));
        this.sprite.on("globalmousemove", (e) => {
            this.handleMouseMove(e.x, e.y);
        });
        document.addEventListener("mousedown", (e) => {
            this.handleClick();
        });
    }
    handleMouseMove(mouse_x, mouse_y) {
        this._mouse_x = mouse_x;
        this._mouse_y = mouse_y;
        // this.sprite.position.x = mouse_x;
        // this.sprite.position.y = mouse_y;
        let message = {
            id: this.game.player_id,
            mouse_x: this._mouse_x,
            mouse_y: this._mouse_y
        };
        this.game.sendMessage(JSON.stringify(message));
    }
    onTimerEnd() {
        let ball_position = { x: 0, y: 0 };
        ball_position.x = this.sprite.x;
        ball_position.y = this.sprite.y - 70;
        let ball_sprite = pixi_js__WEBPACK_IMPORTED_MODULE_1__.Sprite.from("./assets/circles/sphere-02.png");
        this.ball = new _GameObject__WEBPACK_IMPORTED_MODULE_0__.GameObject(0, ball_position, { width: 50, height: 50 }, ball_sprite, this.game);
        this.game.addGameObject(this.ball);
    }
    update(deltaTime) {
        if (this.ball) {
            let vec_x = this._mouse_x - this.sprite.x;
            let vec_y = this._mouse_y - this.sprite.y;
            let length = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
            vec_x /= length;
            vec_y /= length;
            let ball_position_x = this.sprite.x + vec_x * (this.ballRadius + 10);
            let ball_position_y = this.sprite.y + vec_y * (this.ballRadius + 10);
            if (Number.isNaN(ball_position_x) || Number.isNaN(ball_position_y))
                return;
            this.ball.setPosition({ x: ball_position_x, y: ball_position_y });
            this.ball.update(deltaTime);
        }
        for (let ball of this.balls)
            ball.update(deltaTime);
        if (this.timer_started) {
            this.timer -= deltaTime;
            if (this.timer < 0) {
                this.onTimerEnd();
                this.timer_started = false;
            }
        }
        super.update(deltaTime);
    }
    handleClick() {
        if (!this.ball)
            return;
        let vec_x = this._mouse_x - this.sprite.x;
        let vec_y = this._mouse_y - this.sprite.y;
        let length = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
        vec_x /= length;
        vec_y /= length;
        let force = 60;
        vec_x *= force;
        vec_y *= force;
        // Matter.Body.applyForce(this.ball.body, this.ball.body.position, {
        //   x: vec_x,
        //   y: vec_y
        // });
        this.balls.push(this.ball);
        this.ball = undefined;
        this.timer = this.ball_cd;
        this.timer_started = true;
    }
    handleKeyDown(key) { }
    handleKeyUp(key) { }
}


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ "./src/Game.ts");

document.body.style.backgroundColor = "#181818";
function removeItem(arr, value) {
    const index = arr.indexOf(value);
    if (index > -1) {
        arr.splice(index, 1);
    }
    return arr;
}
const main = async () => {
    let game = new _Game__WEBPACK_IMPORTED_MODULE_0__.Game();
    game.run();
};
main();


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["npm.pixi.js","npm.xmldom","npm.pixi","npm.ismobilejs","npm.parse-svg-path","npm.earcut"], () => (__webpack_exec__("./src/index.ts")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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a3cvLi9zcmMvR2FtZU9iamVjdC50cyIsIndlYnBhY2s6Ly9rZWt3Ly4vc3JjL1BsYXllci50cyIsIndlYnBhY2s6Ly9rZWt3Ly4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFBJWEkgZnJvbSBcInBpeGkuanNcIjtcbmltcG9ydCB7IEdhbWVPYmplY3QgfSBmcm9tIFwiLi9HYW1lT2JqZWN0XCI7XG5pbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi9QbGF5ZXJcIjtcblxuY29uc3QgU0VSVkVSX1VSTCA9IFwid3M6Ly8yMTcuMjguMjIxLjg5OjgwMDBcIjtcblxuZXhwb3J0IGNsYXNzIEdhbWUge1xuICBtYXR0ZXJfZW5naW5lOiBNYXR0ZXIuRW5naW5lO1xuICBwaXhpX2FwcDogUElYSS5BcHBsaWNhdGlvbjtcblxuICB3ZWJzb2NrZXQ6IFdlYlNvY2tldDtcbiAgZ2FtZU9iamVjdHM6IEdhbWVPYmplY3RbXTtcbiAgYWRkZWRHYW1lT2JqZWN0czogR2FtZU9iamVjdFtdO1xuXG4gIHBsYXllcl9pZDogbnVtYmVyO1xuXG4gIHBsYXllcjogUGxheWVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucGl4aV9hcHAgPSBuZXcgUElYSS5BcHBsaWNhdGlvbigpO1xuICAgIHRoaXMuZ2FtZU9iamVjdHMgPSBbXTtcbiAgICB0aGlzLmFkZGVkR2FtZU9iamVjdHMgPSBbXTtcbiAgICB0aGlzLnBsYXllcl9pZCA9IC0xO1xuICB9XG5cbiAgc2VuZE1lc3NhZ2Uoc3RyOiBzdHJpbmcpIHtcbiAgICB0aGlzLndlYnNvY2tldC5zZW5kKHN0cik7XG4gIH1cblxuICBhZGRHYW1lT2JqZWN0KGdhbWVPYmplY3Q6IEdhbWVPYmplY3QpIHtcbiAgICB0aGlzLnBpeGlfYXBwLnN0YWdlLmFkZENoaWxkKGdhbWVPYmplY3Quc3ByaXRlKTtcbiAgfVxuXG4gIHJlbW92ZUdhbWVPYmplY3QoZ2FtZU9iamVjdDogR2FtZU9iamVjdCkge1xuICAgIHRoaXMucGl4aV9hcHAuc3RhZ2UucmVtb3ZlQ2hpbGQoZ2FtZU9iamVjdC5zcHJpdGUpO1xuICB9XG5cbiAgYXN5bmMgX2luaXQoKSB7XG4gICAgYXdhaXQgdGhpcy5waXhpX2FwcC5pbml0KCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLnBpeGlfYXBwLmNhbnZhcyk7XG4gIH1cblxuICBhc3luYyBfbG9hZF9hc3NldHMoKSB7XG4gICAgYXdhaXQgUElYSS5Bc3NldHMubG9hZChcIi4vYXNzZXRzL2NpcmNsZXMvc3BoZXJlLTAwLnBuZ1wiKTtcbiAgICBhd2FpdCBQSVhJLkFzc2V0cy5sb2FkKFwiLi9hc3NldHMvY2lyY2xlcy9zcGhlcmUtMDEucG5nXCIpO1xuICAgIGF3YWl0IFBJWEkuQXNzZXRzLmxvYWQoXCIuL2Fzc2V0cy9jaXJjbGVzL3NwaGVyZS0wMi5wbmdcIik7XG4gIH1cblxuICBhc3luYyBfZ2FtZV9sb29wKGRlbHRhVGltZTogbnVtYmVyKSB7XG4gICAgLy9XUklURSBIRVJFIEdBTUUgTE9PUCBDT0RFXG4gICAgaWYgKHRoaXMuYWRkZWRHYW1lT2JqZWN0cy5sZW5ndGggIT09IDApIHtcbiAgICAgIGZvciAobGV0IGVsIG9mIHRoaXMuYWRkZWRHYW1lT2JqZWN0cykge1xuICAgICAgICB0aGlzLmFkZEdhbWVPYmplY3QoZWwpO1xuICAgICAgfVxuICAgICAgdGhpcy5hZGRlZEdhbWVPYmplY3RzID0gW107XG4gICAgfVxuICAgIHRoaXMuYWRkR2FtZU9iamVjdCh0aGlzLnBsYXllcik7XG4gIH1cblxuICBhc3luYyBfaW5pdF93ZWJzb2NrZXQoKSB7XG4gICAgdGhpcy53ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KFNFUlZFUl9VUkwpO1xuICAgIGxldCBwaW5nSW50ZXJ2YWw6IE5vZGVKUy5UaW1lb3V0O1xuICAgIHRoaXMud2Vic29ja2V0Lm9ub3BlbiA9IChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNPTk5FQ1RFRFwiKTtcbiAgICB9O1xuXG4gICAgdGhpcy53ZWJzb2NrZXQub25jbG9zZSA9IChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIkRJU0NPTk5FQ1RFRFwiKTtcbiAgICAgIGNsZWFySW50ZXJ2YWwocGluZ0ludGVydmFsKTtcbiAgICB9O1xuXG4gICAgdGhpcy53ZWJzb2NrZXQub25tZXNzYWdlID0gKGUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBSRUNFSVZFRDogJHtlLmRhdGF9YCk7XG4gICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UoZS5kYXRhKTtcbiAgICAgIGxldCBkX2dhbWVPYmplY3RzID0gZGF0YS5nYW1lT2JqZWN0cztcblxuICAgICAgZm9yIChsZXQgZWwgb2YgZF9nYW1lT2JqZWN0cykge1xuICAgICAgICBsZXQgYmFsbF9zcHJpdGUgPSBQSVhJLlNwcml0ZS5mcm9tKFwiLi9hc3NldHMvY2lyY2xlcy9zcGhlcmUtMDIucG5nXCIpO1xuICAgICAgICBsZXQgYmFsbCA9IG5ldyBHYW1lT2JqZWN0KFxuICAgICAgICAgIGVsLmlkLFxuICAgICAgICAgIHsgeDogZWwucG9zaXRpb24ueCwgeTogZWwucG9zaXRpb24ueSB9LFxuICAgICAgICAgIHsgd2lkdGg6IDUwLCBoZWlnaHQ6IDUwIH0sXG4gICAgICAgICAgYmFsbF9zcHJpdGUsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgICBsZXQgZ28gPSB0aGlzLmdhbWVPYmplY3RzLmZpbmQoKHgpID0+IHguaWQgPT0gZWwuaWQpO1xuICAgICAgICBpZiAoIWdvKSB7XG4gICAgICAgICAgdGhpcy5nYW1lT2JqZWN0cy5wdXNoKGJhbGwpO1xuICAgICAgICAgIHRoaXMuYWRkZWRHYW1lT2JqZWN0cy5wdXNoKGJhbGwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGdvKTtcbiAgICAgICAgICBnby5zZXRQb3NpdGlvbih7IHg6IGVsLnBvc2l0aW9uLngsIHk6IGVsLnBvc2l0aW9uLnkgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnBsYXllcl9pZCA9PT0gLTEpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXJfaWQgPSBkX2dhbWVPYmplY3RzLmF0KC0xKS5pZDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy53ZWJzb2NrZXQub25lcnJvciA9IChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgRVJST1I6ICR7ZX1gKTtcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgcnVuKCkge1xuICAgIGF3YWl0IHRoaXMuX2luaXQoKTtcbiAgICBhd2FpdCB0aGlzLl9sb2FkX2Fzc2V0cygpO1xuICAgIGF3YWl0IHRoaXMuX2luaXRfd2Vic29ja2V0KCk7XG4gICAgbGV0IHBsYXllcl9zcHJpdGUgPSBQSVhJLlNwcml0ZS5mcm9tKFwiLi9hc3NldHMvY2lyY2xlcy9zcGhlcmUtMDEucG5nXCIpO1xuICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcihcbiAgICAgIHsgeDogNTAsIHk6IDEwMCB9LFxuICAgICAgeyB3aWR0aDogNTAsIGhlaWdodDogNTAgfSxcbiAgICAgIHBsYXllcl9zcHJpdGUsXG4gICAgICB0aGlzXG4gICAgKTtcbiAgICB0aGlzLnBpeGlfYXBwLnRpY2tlci5hZGQoKHRpY2tlcikgPT4ge1xuICAgICAgdGhpcy5fZ2FtZV9sb29wKHRpY2tlci5kZWx0YVRpbWUpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgKiBhcyBQSVhJIGZyb20gXCJwaXhpLmpzXCI7XG5pbXBvcnQgeyBHYW1lIH0gZnJvbSBcIi4vR2FtZVwiO1xuXG5leHBvcnQgdHlwZSBQb3NpdGlvbiA9IHtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG59O1xuXG5leHBvcnQgdHlwZSBTaXplID0ge1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjbGFzcyBHYW1lT2JqZWN0IHtcbiAgc3ByaXRlOiBQSVhJLlNwcml0ZTtcbiAgZ2FtZTogR2FtZTtcbiAgdXBkYXRlUm90YXRpb246IGJvb2xlYW47XG4gIGlkOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgaWQ6IG51bWJlcixcbiAgICBwb3NpdGlvbjogUG9zaXRpb24sXG4gICAgc2l6ZTogU2l6ZSxcbiAgICBzcHJpdGU6IFBJWEkuU3ByaXRlLFxuICAgIGdhbWU6IEdhbWVcbiAgKSB7XG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcblxuICAgIHRoaXMuaWQgPSBpZDtcblxuICAgIHRoaXMuc3ByaXRlID0gc3ByaXRlO1xuICAgIHRoaXMuc3ByaXRlLmV2ZW50TW9kZSA9IFwiZHluYW1pY1wiO1xuXG4gICAgdGhpcy5zcHJpdGUucG9zaXRpb24ueCA9IHBvc2l0aW9uLng7XG4gICAgdGhpcy5zcHJpdGUucG9zaXRpb24ueSA9IHBvc2l0aW9uLnk7XG5cbiAgICB0aGlzLnNwcml0ZS5hbmNob3IgPSAwLjU7XG5cbiAgICB0aGlzLnNwcml0ZS53aWR0aCA9IHNpemUud2lkdGg7XG4gICAgdGhpcy5zcHJpdGUuaGVpZ2h0ID0gc2l6ZS5oZWlnaHQ7XG5cbiAgICB0aGlzLnNldFBvc2l0aW9uKHBvc2l0aW9uKTtcblxuICAgIHRoaXMuc3ByaXRlLnRleHR1cmUuc291cmNlLm1hZ0ZpbHRlciA9IFwibmVhcmVzdFwiO1xuICAgIHRoaXMuc3ByaXRlLnRleHR1cmUuc291cmNlLm1pbkZpbHRlciA9IFwibmVhcmVzdFwiO1xuXG4gICAgdGhpcy51cGRhdGVSb3RhdGlvbiA9IHRydWU7XG4gIH1cblxuICBzZXRQb3NpdGlvbihwb3NpdGlvbjogUG9zaXRpb24pIHtcbiAgICB0aGlzLnNwcml0ZS5wb3NpdGlvbi54ID0gcG9zaXRpb24ueDtcbiAgICB0aGlzLnNwcml0ZS5wb3NpdGlvbi55ID0gcG9zaXRpb24ueTtcbiAgfVxuXG4gIHVwZGF0ZShkZWx0YVRpbWU6IG51bWJlcikge31cbn1cbiIsImltcG9ydCB7IEdhbWVPYmplY3QsIFBvc2l0aW9uLCBTaXplIH0gZnJvbSBcIi4vR2FtZU9iamVjdFwiO1xuaW1wb3J0IHsgRmVkZXJhdGVkTW91c2VFdmVudCwgU3ByaXRlIH0gZnJvbSBcInBpeGkuanNcIjtcbmltcG9ydCAqIGFzIFBJWEkgZnJvbSBcInBpeGkuanNcIjtcbmltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi9HYW1lXCI7XG5cbmV4cG9ydCBjbGFzcyBQbGF5ZXIgZXh0ZW5kcyBHYW1lT2JqZWN0IHtcbiAgdng6IG51bWJlcjtcbiAgdnk6IG51bWJlcjtcblxuICBfbW91c2VfeDogbnVtYmVyO1xuICBfbW91c2VfeTogbnVtYmVyO1xuXG4gIGJhbGw6IEdhbWVPYmplY3Q7XG5cbiAgYmFsbFJhZGl1czogbnVtYmVyO1xuXG4gIGJhbGxzOiBHYW1lT2JqZWN0W107XG5cbiAgdmVsb2NpdHk6IG51bWJlcjtcblxuICB0aW1lcjogbnVtYmVyO1xuICB0aW1lcl9zdGFydGVkOiBib29sZWFuO1xuXG4gIGdhbWU6IEdhbWU7XG5cbiAgYmFsbF9jZDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHBvc2l0aW9uOiBQb3NpdGlvbiwgc2l6ZTogU2l6ZSwgc3ByaXRlOiBTcHJpdGUsIGdhbWU6IEdhbWUpIHtcbiAgICBzdXBlcigtMSwgcG9zaXRpb24sIHNpemUsIHNwcml0ZSwgZ2FtZSk7XG4gICAgdGhpcy51cGRhdGVSb3RhdGlvbiA9IGZhbHNlO1xuXG4gICAgdGhpcy52ZWxvY2l0eSA9IDIwO1xuICAgIHRoaXMuYmFsbFJhZGl1cyA9IDUwO1xuICAgIHRoaXMudnggPSAwO1xuICAgIHRoaXMudnkgPSAwO1xuXG4gICAgdGhpcy5fbW91c2VfeCA9IDA7XG4gICAgdGhpcy5fbW91c2VfeSA9IDA7XG5cbiAgICB0aGlzLmJhbGxzID0gW107XG5cbiAgICB0aGlzLnRpbWVyID0gMDtcbiAgICB0aGlzLmJhbGxfY2QgPSA1O1xuICAgIHRoaXMudGltZXJfc3RhcnRlZCA9IGZhbHNlO1xuXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcblxuICAgIGxldCBiYWxsX3Bvc2l0aW9uOiBQb3NpdGlvbiA9IHsgeDogMCwgeTogMCB9O1xuICAgIGJhbGxfcG9zaXRpb24ueCA9IHBvc2l0aW9uLng7XG4gICAgYmFsbF9wb3NpdGlvbi55ID0gcG9zaXRpb24ueSAtIDcwO1xuXG4gICAgbGV0IGJhbGxfc3ByaXRlID0gUElYSS5TcHJpdGUuZnJvbShcIi4vYXNzZXRzL2NpcmNsZXMvc3BoZXJlLTAyLnBuZ1wiKTtcbiAgICB0aGlzLmJhbGwgPSBuZXcgR2FtZU9iamVjdChcbiAgICAgIDAsXG4gICAgICBiYWxsX3Bvc2l0aW9uLFxuICAgICAgeyB3aWR0aDogNTAsIGhlaWdodDogNTAgfSxcbiAgICAgIGJhbGxfc3ByaXRlLFxuICAgICAgZ2FtZVxuICAgICk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZTogS2V5Ym9hcmRFdmVudCkgPT5cbiAgICAgIHRoaXMuaGFuZGxlS2V5RG93bihlLmtleSlcbiAgICApO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIChlOiBLZXlib2FyZEV2ZW50KSA9PlxuICAgICAgdGhpcy5oYW5kbGVLZXlVcChlLmtleSlcbiAgICApO1xuXG4gICAgdGhpcy5zcHJpdGUub24oXCJnbG9iYWxtb3VzZW1vdmVcIiwgKGU6IEZlZGVyYXRlZE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuaGFuZGxlTW91c2VNb3ZlKGUueCwgZS55KTtcbiAgICB9KTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHtcbiAgICAgIHRoaXMuaGFuZGxlQ2xpY2soKTtcbiAgICB9KTtcbiAgfVxuXG4gIGhhbmRsZU1vdXNlTW92ZShtb3VzZV94OiBudW1iZXIsIG1vdXNlX3k6IG51bWJlcikge1xuICAgIHRoaXMuX21vdXNlX3ggPSBtb3VzZV94O1xuICAgIHRoaXMuX21vdXNlX3kgPSBtb3VzZV95O1xuICAgIC8vIHRoaXMuc3ByaXRlLnBvc2l0aW9uLnggPSBtb3VzZV94O1xuICAgIC8vIHRoaXMuc3ByaXRlLnBvc2l0aW9uLnkgPSBtb3VzZV95O1xuICAgIGxldCBtZXNzYWdlID0ge1xuICAgICAgaWQ6IHRoaXMuZ2FtZS5wbGF5ZXJfaWQsXG4gICAgICBtb3VzZV94OiB0aGlzLl9tb3VzZV94LFxuICAgICAgbW91c2VfeTogdGhpcy5fbW91c2VfeVxuICAgIH07XG4gICAgdGhpcy5nYW1lLnNlbmRNZXNzYWdlKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcbiAgfVxuXG4gIG9uVGltZXJFbmQoKSB7XG4gICAgbGV0IGJhbGxfcG9zaXRpb246IFBvc2l0aW9uID0geyB4OiAwLCB5OiAwIH07XG4gICAgYmFsbF9wb3NpdGlvbi54ID0gdGhpcy5zcHJpdGUueDtcbiAgICBiYWxsX3Bvc2l0aW9uLnkgPSB0aGlzLnNwcml0ZS55IC0gNzA7XG5cbiAgICBsZXQgYmFsbF9zcHJpdGUgPSBQSVhJLlNwcml0ZS5mcm9tKFwiLi9hc3NldHMvY2lyY2xlcy9zcGhlcmUtMDIucG5nXCIpO1xuICAgIHRoaXMuYmFsbCA9IG5ldyBHYW1lT2JqZWN0KFxuICAgICAgMCxcbiAgICAgIGJhbGxfcG9zaXRpb24sXG4gICAgICB7IHdpZHRoOiA1MCwgaGVpZ2h0OiA1MCB9LFxuICAgICAgYmFsbF9zcHJpdGUsXG4gICAgICB0aGlzLmdhbWVcbiAgICApO1xuICAgIHRoaXMuZ2FtZS5hZGRHYW1lT2JqZWN0KHRoaXMuYmFsbCk7XG4gIH1cblxuICB1cGRhdGUoZGVsdGFUaW1lOiBudW1iZXIpIHtcbiAgICBpZiAodGhpcy5iYWxsKSB7XG4gICAgICBsZXQgdmVjX3ggPSB0aGlzLl9tb3VzZV94IC0gdGhpcy5zcHJpdGUueDtcbiAgICAgIGxldCB2ZWNfeSA9IHRoaXMuX21vdXNlX3kgLSB0aGlzLnNwcml0ZS55O1xuXG4gICAgICBsZXQgbGVuZ3RoID0gTWF0aC5zcXJ0KHZlY194ICogdmVjX3ggKyB2ZWNfeSAqIHZlY195KTtcbiAgICAgIHZlY194IC89IGxlbmd0aDtcbiAgICAgIHZlY195IC89IGxlbmd0aDtcblxuICAgICAgbGV0IGJhbGxfcG9zaXRpb25feCA9IHRoaXMuc3ByaXRlLnggKyB2ZWNfeCAqICh0aGlzLmJhbGxSYWRpdXMgKyAxMCk7XG4gICAgICBsZXQgYmFsbF9wb3NpdGlvbl95ID0gdGhpcy5zcHJpdGUueSArIHZlY195ICogKHRoaXMuYmFsbFJhZGl1cyArIDEwKTtcblxuICAgICAgaWYgKE51bWJlci5pc05hTihiYWxsX3Bvc2l0aW9uX3gpIHx8IE51bWJlci5pc05hTihiYWxsX3Bvc2l0aW9uX3kpKVxuICAgICAgICByZXR1cm47XG5cbiAgICAgIHRoaXMuYmFsbC5zZXRQb3NpdGlvbih7IHg6IGJhbGxfcG9zaXRpb25feCwgeTogYmFsbF9wb3NpdGlvbl95IH0pO1xuICAgICAgdGhpcy5iYWxsLnVwZGF0ZShkZWx0YVRpbWUpO1xuICAgIH1cblxuICAgIGZvciAobGV0IGJhbGwgb2YgdGhpcy5iYWxscykgYmFsbC51cGRhdGUoZGVsdGFUaW1lKTtcblxuICAgIGlmICh0aGlzLnRpbWVyX3N0YXJ0ZWQpIHtcbiAgICAgIHRoaXMudGltZXIgLT0gZGVsdGFUaW1lO1xuICAgICAgaWYgKHRoaXMudGltZXIgPCAwKSB7XG4gICAgICAgIHRoaXMub25UaW1lckVuZCgpO1xuICAgICAgICB0aGlzLnRpbWVyX3N0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzdXBlci51cGRhdGUoZGVsdGFUaW1lKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKCkge1xuICAgIGlmICghdGhpcy5iYWxsKSByZXR1cm47XG4gICAgbGV0IHZlY194ID0gdGhpcy5fbW91c2VfeCAtIHRoaXMuc3ByaXRlLng7XG4gICAgbGV0IHZlY195ID0gdGhpcy5fbW91c2VfeSAtIHRoaXMuc3ByaXRlLnk7XG5cbiAgICBsZXQgbGVuZ3RoID0gTWF0aC5zcXJ0KHZlY194ICogdmVjX3ggKyB2ZWNfeSAqIHZlY195KTtcbiAgICB2ZWNfeCAvPSBsZW5ndGg7XG4gICAgdmVjX3kgLz0gbGVuZ3RoO1xuXG4gICAgbGV0IGZvcmNlID0gNjA7XG5cbiAgICB2ZWNfeCAqPSBmb3JjZTtcbiAgICB2ZWNfeSAqPSBmb3JjZTtcblxuICAgIC8vIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2UodGhpcy5iYWxsLmJvZHksIHRoaXMuYmFsbC5ib2R5LnBvc2l0aW9uLCB7XG4gICAgLy8gICB4OiB2ZWNfeCxcbiAgICAvLyAgIHk6IHZlY195XG4gICAgLy8gfSk7XG4gICAgdGhpcy5iYWxscy5wdXNoKHRoaXMuYmFsbCk7XG4gICAgdGhpcy5iYWxsID0gdW5kZWZpbmVkO1xuXG4gICAgdGhpcy50aW1lciA9IHRoaXMuYmFsbF9jZDtcbiAgICB0aGlzLnRpbWVyX3N0YXJ0ZWQgPSB0cnVlO1xuICB9XG5cbiAgaGFuZGxlS2V5RG93bihrZXk6IHN0cmluZykge31cblxuICBoYW5kbGVLZXlVcChrZXk6IHN0cmluZykge31cbn1cbiIsImltcG9ydCAqIGFzIFBJWEkgZnJvbSBcInBpeGkuanNcIjtcbmltcG9ydCAqIGFzIE1hdHRlciBmcm9tIFwibWF0dGVyLWpzXCI7XG5pbXBvcnQgeyBHYW1lT2JqZWN0IH0gZnJvbSBcIi4vR2FtZU9iamVjdFwiO1xuaW1wb3J0IHsgR2FtZSB9IGZyb20gXCIuL0dhbWVcIjtcblxuZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiMxODE4MThcIjtcblxuZnVuY3Rpb24gcmVtb3ZlSXRlbTxUPihhcnI6IEFycmF5PFQ+LCB2YWx1ZTogVCk6IEFycmF5PFQ+IHtcbiAgY29uc3QgaW5kZXggPSBhcnIuaW5kZXhPZih2YWx1ZSk7XG4gIGlmIChpbmRleCA+IC0xKSB7XG4gICAgYXJyLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbiAgcmV0dXJuIGFycjtcbn1cblxuY29uc3QgbWFpbiA9IGFzeW5jICgpID0+IHtcbiAgbGV0IGdhbWUgPSBuZXcgR2FtZSgpO1xuICBnYW1lLnJ1bigpO1xufTtcblxubWFpbigpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9